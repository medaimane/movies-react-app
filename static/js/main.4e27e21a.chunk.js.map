{"version":3,"sources":["reportWebVitals.ts","services/api/MoviesGateway/MoviesService.ts","services/networking/NetworkingServiceConfig.ts","services/networking/HTTPMethod.ts","services/networking/NetworkingServiceImpl.ts","store/ActionCreatorFactory.ts","store/ViewState.ts","dependencies/Dependencies.ts","services/networking/BaseUrls.ts","screens/home/homeActions.ts","screens/home/homeEpic.ts","store/rootEpic.ts","screens/home/homeReducer.ts","store/rootReducer.ts","store/configureStore.ts","localization/local.ts","components/MoviesAppBar/Logo.tsx","components/MoviesAppBar/SearchInput.tsx","theme/Colors.ts","components/MoviesAppBar/MenuButton.tsx","components/MoviesAppBar/MenueWrapper.tsx","components/MoviesAppBar/MovieMenuCard.tsx","components/MoviesAppBar/MoviesMenu.tsx","components/MoviesAppBar/MoviesAppBar.tsx","components/View.tsx","components/TextView.tsx","components/MoviesEmptyView.tsx","components/StyledList.tsx","components/MoviesList.tsx","components/ErrorView.tsx","components/LoadingView.tsx","components/RemoteData.tsx","components/WelcomeView.tsx","screens/home/MoviePresentable.ts","screens/home/HomeScreen.tsx","screens/home/homeSelectors.ts","screens/App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MoviesService","networkingService","query","this","getJSON","pipe","map","data","results","HTTPMethod","namespace","ViewState","NetworkingServiceImpl","ajaxCreationMethod","configuration","endpoint","params","headers","url","buildURL","sendRequest","GET","response","log","catchError","error","logError","throwError","method","body","timeout","baseUrl","apiKey","console","err","config","process","dependencies","moviesGateway","ajax","actionCreator","type","namespacedType","Object","assign","payload","$","of","HomeActions","search","success","failure","HomeViewActions","onSearchInputChange","addToFavoriesMovies","addToWatchLaterMovies","removeFromFavoritesMovies","removeFromWatchLaterMovies","homeEpic","combineEpics","action$","_state$","ofType","switchMap","action","debounceTime","EMPTY","rootEpic","initialHomeState","isWelcomeVisible","viewState","Loading","movies","favoritesMovies","watchLaterMovies","filterMoviesWithoutPoster","filter","m","poster_path","rootReducer","combineReducers","home","state","isEmpty","length","Empty","Data","Error","movieToAdd","movieToRemove","id","store","epicMiddleware","createEpicMiddleware","configuredStore","createStore","applyMiddleware","logger","run","configureStore","local","Logo","Typography","variant","noWrap","component","sx","display","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","paddingRight","spacing","paddingLeft","width","breakpoints","up","SearchIconWrapper","height","pointerEvents","alignItems","justifyContent","StyledInputBase","InputBase","color","padding","transition","transitions","create","SearchInput","props","fullWidth","value","placeholder","inputProps","onChange","e","target","Colors","MenuButton","IconButton","size","edge","aria-label","label","aria-controls","menuId","aria-haspopup","onClick","currentTarget","Badge","overlap","invisible","hasBadge","children","MenueWrapper","Menu","flex","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","isOpen","onClose","MovieMenuCard","Card","margin","Box","flexDirection","CardContent","movie","title","overview","substring","pl","pb","onRemove","BookmarkRemove","CardMedia","image","poster","alt","MoviesMenu","Boolean","idx","StyledAppBar","AppBar","MoviesAppBar","useState","favoritesMenuAnchorEl","setFavoritesMenuAnchorEl","watchLaterMenuAnchorEl","setWatchLaterMenuAnchorEl","hasFavoritesMovies","hasWatchLaterMovies","favoritesMenuId","renderFavoritesMenu","removeFromFavorites","watchLaterMenuId","renderWatchLaterMenu","removeFromWatchLater","Toolbar","EmptySeparator","AccessTime","flexGrow","View","TextView","text","MoviesEmptyView","StyledList","List","flexWrap","StyledImageListItem","ImageListItem","MoviesList","src","srcSet","loading","ImageListItemBar","background","actionPosition","actionIcon","disabled","isFavorite","addToFavorites","isWatchLater","addToWatchLater","subtitle","ErrorView","LoadingView","CircularProgress","RemoteData","renderData","renderEmpty","content","WelcomeView","buildMoviesPresentable","moviesJSON","favorites","watchLater","imagesBaseUrl","path","some","f","w","mapStateToProps","getViewState","mapDispatchToProps","dispatch","bindActionCreators","returntypeof","HomeScreen","connect","App","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e27e21a.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {map, Observable} from 'rxjs';\nimport {NetworkingService} from '../../networking/NetworkingService';\nimport {MovieJSON, MoviesJSON} from '../models/MoviesJSON';\nimport {MoviesGateway} from './MoviesGateway';\n\nexport class MoviesService implements MoviesGateway {\n  constructor(private readonly networkingService: NetworkingService) {}\n\n  search(query: string): Observable<MovieJSON[]> {\n    return this.networkingService\n      .getJSON<MoviesJSON>('3/search/movie', `query=${query}&page=1`)\n      .pipe(map((data) => data.results));\n  }\n}\n","import {getApiBaseUrl, getApiKey} from './BaseUrls';\n\nexport interface NetworkingServiceConfig {\n  readonly baseUrl: string;\n  readonly apiKey: string;\n  readonly timeout: number;\n}\n\nexport class DevNetworkingServiceConfig implements NetworkingServiceConfig {\n  readonly baseUrl = getApiBaseUrl();\n  readonly apiKey = getApiKey();\n  readonly timeout = 30000;\n}\n","export enum HTTPMethod {\n  GET = 'GET',\n  // POST, PUT...\n}\n","import {Observable, throwError} from 'rxjs';\nimport {AjaxResponse} from 'rxjs/ajax';\nimport {catchError, map} from 'rxjs/operators';\nimport {NetworkingServiceConfig} from './NetworkingServiceConfig';\nimport {NetworkingService} from './NetworkingService';\nimport {AjaxCreationMethod} from 'rxjs/internal/ajax/ajax';\nimport {Dict} from '../api/Dict';\nimport {HTTPMethod} from './HTTPMethod';\n\nexport class NetworkingServiceImpl implements NetworkingService {\n  constructor(\n    private readonly ajaxCreationMethod: AjaxCreationMethod,\n    private readonly configuration: NetworkingServiceConfig\n  ) {}\n\n  getJSON<T>(endpoint: string, params?: string, headers?: Dict): Observable<T> {\n    const url = this.buildURL(endpoint, params);\n\n    return this.sendRequest<T>(url, HTTPMethod.GET, headers).pipe(\n      map((response) => {\n        log(url, response);\n\n        return response.response;\n      }),\n      catchError((error) => {\n        logError(url, error);\n\n        return throwError(() => error);\n      })\n    );\n  }\n\n  sendRequest<T>(\n    url: string,\n    method: HTTPMethod,\n    headers?: Dict,\n    body?: Dict\n  ): Observable<AjaxResponse<T>> {\n    return this.ajaxCreationMethod({\n      url,\n      method,\n      headers,\n      body,\n      timeout: this.configuration.timeout,\n    });\n  }\n\n  buildURL(endpoint: string, params?: string) {\n    const {baseUrl, apiKey} = this.configuration;\n    return (\n      baseUrl + '/' + endpoint + '?api_key=' + apiKey + '&' + (params ?? '')\n    );\n  }\n}\n\nconst log = <T>(url: string, data: T) => console.log(`[URL: ${url}]`, data);\nconst logError = (url: string, err: Error) =>\n  console.error(`[URL: ${url}]`, err);\n","import {Observable, of} from 'rxjs';\nimport {Action, ActionWithPayload} from './Action';\n\nexport interface ActionCreator {\n  readonly type: string;\n  readonly $: () => Observable<Action>;\n\n  (): Action;\n}\n\nexport interface ActionWithPayloadCreator<Payload> {\n  readonly type: string;\n  readonly $: (payload: Payload) => Observable<Payload>;\n\n  (payload: Payload): ActionWithPayload<Payload>;\n}\n\nexport interface ActionCreatorFactory {\n  (type: string): ActionCreator;\n  <Payload = void>(type: string): ActionWithPayloadCreator<Payload>;\n}\n\nexport const actionCreatorFactory = (\n  namespace: string\n): ActionCreatorFactory => {\n  return <T>(type: string) => {\n    const namespacedType = `${namespace}/${type}`;\n    return Object.assign(\n      (payload?: T) => ({\n        payload,\n        type: namespacedType,\n      }),\n      {\n        type: namespacedType,\n        $: (payload?: T) =>\n          of({\n            payload,\n            type: namespacedType,\n          }),\n      }\n    );\n  };\n};\n","export enum ViewState {\n  Loading = 'Loading',\n  Empty = 'Empty',\n  Data = 'Data',\n  Error = 'Error',\n}\n","import {ajax} from 'rxjs/ajax';\nimport {MoviesGateway} from '../services/api/MoviesGateway/MoviesGateway';\nimport {MoviesService} from '../services/api/MoviesGateway/MoviesService';\nimport {DevNetworkingServiceConfig} from '../services/networking/NetworkingServiceConfig';\nimport {NetworkingServiceImpl} from '../services/networking/NetworkingServiceImpl';\n\nconst config = new DevNetworkingServiceConfig();\n\nconst networkingService = new NetworkingServiceImpl(ajax, config);\n\nexport interface Dependencies {\n  moviesGateway: MoviesGateway;\n}\n\nexport const dependencies: Dependencies = {\n  moviesGateway: new MoviesService(networkingService),\n};\n","export function getApiKey(): string {\n  const apiKey = process.env.REACT_APP_TMDB_API_KEY;\n\n  if (!apiKey) {\n    throw new Error('Ooops! The api key is not available!');\n  }\n\n  return apiKey;\n}\n\nexport function getApiBaseUrl(): string {\n  const baseUrl = process.env.REACT_APP_TMDB_API_BASE_URL;\n\n  if (!baseUrl) {\n    throw new Error('Ooops! The api base url is not available!');\n  }\n\n  return baseUrl;\n}\n\nexport function getImagesBaseUrl(): string {\n  const baseUrl = process.env.REACT_APP_TMDB_IMAGES_BASE_URL;\n\n  if (!baseUrl) {\n    throw new Error('Ooops! The images base url is not available!');\n  }\n\n  return baseUrl;\n}\n","import {MovieJSON} from '../../services/api/models/MoviesJSON';\nimport {actionCreatorFactory} from '../../store/ActionCreatorFactory';\nimport {MoviePresentable} from './MoviePresentable';\n\nconst actionCreator = actionCreatorFactory('HOME');\n\nexport const HomeActions = {\n  search: {\n    success: actionCreator<MovieJSON[]>('SEARCH_SUCCESS'),\n    failure: actionCreator('SEARCH_FAILURE'),\n  },\n};\n\nexport const HomeViewActions = {\n  onSearchInputChange: actionCreator<string>('ON_SEARCH_INPUT_CHANGE'),\n\n  addToFavoriesMovies: actionCreator<MoviePresentable>(\n    'ADD_TO_FAVORITES_MOVIES'\n  ),\n  addToWatchLaterMovies: actionCreator<MoviePresentable>(\n    'ADD_TO_WATCH_LATER_MOVIES'\n  ),\n\n  removeFromFavoritesMovies: actionCreator<MoviePresentable>(\n    'REMOVE_FROM_FAVORITES_MOVIES'\n  ),\n  removeFromWatchLaterMovies: actionCreator<MoviePresentable>(\n    'REMOVE_FROM_WATCH_LATER_MOVIES'\n  ),\n};\n","import {combineEpics, ofType} from 'redux-observable';\nimport {catchError, debounceTime, EMPTY, map, of, switchMap} from 'rxjs';\nimport {EpicType} from '../../store/EpicType';\nimport {HomeActions, HomeViewActions} from './homeActions';\n\nconst onSearch: EpicType = (action$, _state$, {moviesGateway}) =>\n  action$.pipe(\n    ofType(HomeViewActions.onSearchInputChange.type),\n    switchMap((action) => {\n      const query: string = action.payload;\n\n      if (!query) {\n        return EMPTY;\n      }\n\n      return moviesGateway.search(query).pipe(\n        debounceTime(10000),\n        map(HomeActions.search.success),\n        catchError(() => of(HomeActions.search.failure()))\n      );\n    })\n  );\n\nexport const homeEpic = combineEpics(onSearch);\n","import {combineEpics} from 'redux-observable';\nimport {homeEpic} from '../screens/home/homeEpic';\n\nexport const rootEpic = combineEpics(homeEpic);\n","import {MovieJSON} from '../../services/api/models/MoviesJSON';\nimport {Action} from '../../store/Action';\nimport {ViewState} from '../../store/ViewState';\nimport {HomeActions, HomeViewActions} from './homeActions';\nimport {MoviePresentable} from './MoviePresentable';\n\nexport interface HomeState {\n  isWelcomeVisible: boolean;\n  viewState: ViewState;\n\n  search: string;\n  movies: MovieJSON[];\n  favoritesMovies: MoviePresentable[];\n  watchLaterMovies: MoviePresentable[];\n}\n\nexport const initialHomeState: HomeState = {\n  isWelcomeVisible: true,\n  viewState: ViewState.Loading,\n\n  search: '',\n  movies: [],\n  favoritesMovies: [],\n  watchLaterMovies: [],\n};\n\nexport function homeReducer(\n  state: HomeState = initialHomeState,\n  action: Action\n): HomeState {\n  switch (action.type) {\n    case HomeViewActions.onSearchInputChange.type: {\n      return {\n        ...state,\n        search: action.payload,\n        isWelcomeVisible: false,\n      };\n    }\n\n    case HomeActions.search.success.type: {\n      const movies = filterMoviesWithoutPoster(action.payload);\n      const isEmpty = movies.length === 0;\n      return {\n        ...state,\n        viewState: isEmpty ? ViewState.Empty : ViewState.Data,\n        movies,\n      };\n    }\n\n    case HomeActions.search.failure.type: {\n      return {\n        ...state,\n        viewState: ViewState.Error,\n        movies: [],\n      };\n    }\n\n    case HomeViewActions.addToFavoriesMovies.type: {\n      const movieToAdd: MoviePresentable = action.payload;\n      return {\n        ...state,\n        favoritesMovies: [movieToAdd, ...state.favoritesMovies],\n      };\n    }\n\n    case HomeViewActions.addToWatchLaterMovies.type: {\n      const movieToAdd: MoviePresentable = action.payload;\n      return {\n        ...state,\n        watchLaterMovies: [movieToAdd, ...state.watchLaterMovies],\n      };\n    }\n\n    case HomeViewActions.removeFromFavoritesMovies.type: {\n      const movieToRemove: MoviePresentable = action.payload;\n      return {\n        ...state,\n        favoritesMovies: state.favoritesMovies.filter(\n          (m) => m.id !== movieToRemove.id\n        ),\n      };\n    }\n\n    case HomeViewActions.removeFromWatchLaterMovies.type: {\n      const movieToRemove: MoviePresentable = action.payload;\n      return {\n        ...state,\n        watchLaterMovies: state.watchLaterMovies.filter(\n          (m) => m.id !== movieToRemove.id\n        ),\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n}\n\nfunction filterMoviesWithoutPoster(movies: MovieJSON[]): MovieJSON[] {\n  return movies.filter((m) => m.poster_path);\n}\n","import {combineReducers} from 'redux';\nimport {homeReducer} from '../screens/home/homeReducer';\n\nexport const rootReducer = combineReducers({\n  home: homeReducer,\n});\n","import {createStore, applyMiddleware, Store} from 'redux';\nimport logger from 'redux-logger';\nimport {createEpicMiddleware} from 'redux-observable';\nimport {Dependencies, dependencies} from '../dependencies/Dependencies';\nimport {Action, ActionWithPayload} from './Action';\nimport {rootEpic} from './rootEpic';\nimport {rootReducer} from './rootReducer';\nimport {RootState} from './rootState';\n\nexport function configureStore(): Store {\n  const epicMiddleware = createEpicMiddleware<\n    Action | ActionWithPayload,\n    Action | ActionWithPayload,\n    RootState,\n    Dependencies\n  >({dependencies});\n\n  const configuredStore = createStore(\n    rootReducer,\n    applyMiddleware(epicMiddleware, logger)\n  );\n\n  epicMiddleware.run(rootEpic);\n\n  return configuredStore;\n}\n\nexport const store = configureStore();\n","export const local = {\n  logo: 'MoviesDB',\n\n  welcome: 'Welcome to the Movies DB',\n\n  noMoviesFound: 'No movies found!',\n  somethingWentWrong: 'Ooops! Something went wrong, click to retry!',\n\n  search: 'Search...',\n  searchResults: 'Search results:',\n\n  favorites: 'Favorites',\n  watchLater: 'Watch later',\n};\n","import React from 'react';\nimport {Typography} from '@mui/material';\nimport {local} from '../../localization/local';\n\nexport function Logo() {\n  return (\n    <Typography variant=\"h6\" noWrap component=\"div\" sx={{display: 'block'}}>\n      {local.logo}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport {InputBase} from '@mui/material';\nimport {styled, alpha} from '@mui/material/styles';\nimport {Search as SearchIcon} from '@mui/icons-material';\nimport {local} from '../../localization/local';\n\nconst Search = styled('div')(({theme}) => ({\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  backgroundColor: alpha(theme.palette.common.white, 0.1),\n  '&:hover': {\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n  },\n  paddingRight: theme.spacing(2),\n  paddingLeft: theme.spacing(2),\n  width: '100%',\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(4),\n    width: 'auto',\n  },\n  [theme.breakpoints.up('xs')]: {\n    paddingLeft: theme.spacing(1),\n    width: '50%',\n  },\n}));\n\nconst SearchIconWrapper = styled('div')(({theme}) => ({\n  height: '100%',\n  position: 'absolute',\n  pointerEvents: 'none',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  [theme.breakpoints.up('sm')]: {\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\nconst StyledInputBase = styled(InputBase)(({theme}) => ({\n  color: 'inherit',\n  '& .MuiInputBase-input': {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '20ch',\n    },\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(6),\n    },\n    [theme.breakpoints.up('xs')]: {\n      paddingLeft: theme.spacing(5),\n    },\n  },\n}));\n\ninterface Props {\n  value: string;\n  onChange: (text: string) => void;\n}\n\nexport function SearchInput(props: Props) {\n  return (\n    <Search>\n      <SearchIconWrapper>\n        <SearchIcon />\n      </SearchIconWrapper>\n      <StyledInputBase\n        fullWidth={true}\n        value={props.value}\n        placeholder={local.search}\n        inputProps={{'aria-label': local.search}}\n        onChange={(e) => props.onChange(e.target.value)}\n      />\n    </Search>\n  );\n}\n","export const Colors = {\n  primary: '#ff0000',\n  secondary: '#282828',\n\n  black: '#000000',\n  white: '#ffffff',\n};\n","import React, {ReactNode} from 'react';\nimport {Badge, IconButton} from '@mui/material';\n\ninterface Props {\n  label?: string;\n  menuId?: string;\n  hasBadge: boolean;\n  children: ReactNode;\n  onClick?: (e: HTMLElement) => void;\n}\n\nexport function MenuButton(props: Props) {\n  return (\n    <IconButton\n      size=\"large\"\n      edge=\"end\"\n      aria-label={props.label}\n      aria-controls={props.menuId}\n      aria-haspopup=\"true\"\n      onClick={(e) => props.onClick?.(e.currentTarget)}\n      color=\"inherit\"\n    >\n      <Badge\n        variant=\"dot\"\n        color=\"error\"\n        overlap=\"circular\"\n        invisible={!props.hasBadge}\n      >\n        {props.children}\n      </Badge>\n    </IconButton>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {Menu} from '@mui/material';\n\ninterface Props {\n  menuId: string;\n  isOpen: boolean;\n  children: ReactNode;\n\n  anchorEl: HTMLElement | null;\n\n  onClose: () => void;\n}\n\nexport function MenueWrapper(props: Props) {\n  return (\n    <Menu\n      sx={{\n        display: 'flex',\n        flex: 1,\n        justifyContent: 'flex-end',\n      }}\n      anchorEl={props.anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={props.menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={props.isOpen}\n      onClose={props.onClose}\n    >\n      {props.children}\n    </Menu>\n  );\n}\n","import React from 'react';\nimport {\n  Box,\n  Typography,\n  IconButton,\n  Card,\n  CardMedia,\n  CardContent,\n} from '@mui/material';\nimport {\n  PlayArrow as PlayArrowIcon,\n  BookmarkRemove as BookmarkRemoveIcon,\n} from '@mui/icons-material';\nimport {MoviePresentable} from '../../screens/home/MoviePresentable';\nimport {Colors} from '../../theme/Colors';\n\ninterface Props {\n  movie: MoviePresentable;\n\n  onRemove: () => void;\n}\n\nexport default function MovieMenuCard(props: Props) {\n  return (\n    <Card\n      sx={{\n        display: 'flex',\n        flex: 1,\n        margin: 2,\n      }}\n    >\n      <Box sx={{display: 'flex', flexDirection: 'column', flex: '1'}}>\n        <CardContent sx={{flex: '1 0 auto'}}>\n          <Typography component=\"div\" variant=\"h5\">\n            {props.movie.title}\n          </Typography>\n          <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"p\">\n            {props.movie.overview.substring(0, 150) + '...'}\n          </Typography>\n        </CardContent>\n\n        <Box sx={{display: 'flex', alignItems: 'center', pl: 1, pb: 1}}>\n          <IconButton\n            aria-label=\"remove\"\n            sx={{color: Colors.black}}\n            onClick={() => props.onRemove()}\n          >\n            <BookmarkRemoveIcon />\n          </IconButton>\n        </Box>\n      </Box>\n\n      <CardMedia\n        component=\"img\"\n        sx={{width: 151}}\n        image={props.movie.poster}\n        alt={props.movie.title}\n      />\n    </Card>\n  );\n}\n","import React from 'react';\nimport {MoviePresentable} from '../../screens/home/MoviePresentable';\nimport {MenueWrapper} from './MenueWrapper';\nimport MovieMenuCard from './MovieMenuCard';\n\ninterface Props {\n  anchorEl: HTMLElement | null;\n\n  menuId: string;\n  movies: MoviePresentable[];\n\n  onClose: () => void;\n  onRemove: (m: MoviePresentable) => void;\n}\n\nexport function MoviesMenu(props: Props) {\n  const isOpen = Boolean(props.anchorEl);\n\n  const handleClose = () => {\n    props.onClose();\n  };\n\n  return (\n    <MenueWrapper\n      anchorEl={props.anchorEl}\n      isOpen={isOpen}\n      menuId={props.menuId}\n      onClose={handleClose}\n    >\n      {props.movies.map((m, idx) => (\n        <MovieMenuCard\n          movie={m}\n          key={'MoviesMenuItem_' + idx}\n          onRemove={() => props.onRemove(m)}\n        />\n      ))}\n    </MenueWrapper>\n  );\n}\n","import React, {useState} from 'react';\nimport {AppBar, Box, Toolbar} from '@mui/material';\nimport {\n  AccessTime as AccessTimeIcon,\n  FavoriteBorder as FavoriteIcon,\n} from '@mui/icons-material';\nimport {Logo} from './Logo';\nimport {SearchInput} from './SearchInput';\nimport {local} from '../../localization/local';\nimport {styled} from '@mui/material/styles';\nimport {Colors} from '../../theme/Colors';\nimport {MenuButton} from './MenuButton';\nimport {MoviePresentable} from '../../screens/home/MoviePresentable';\nimport {MoviesMenu} from './MoviesMenu';\n\ninterface Props {\n  search: string;\n\n  favoritesMovies: MoviePresentable[];\n  watchLaterMovies: MoviePresentable[];\n\n  onSearchInputChange: (text: string) => void;\n\n  removeFromFavorites: (m: MoviePresentable) => void;\n  removeFromWatchLater: (m: MoviePresentable) => void;\n}\n\nconst StyledAppBar = styled(AppBar)(() => ({\n  backgroundColor: Colors.black,\n}));\n\nexport function MoviesAppBar(props: Props) {\n  const [favoritesMenuAnchorEl, setFavoritesMenuAnchorEl] =\n    useState<null | HTMLElement>(null);\n  const [watchLaterMenuAnchorEl, setWatchLaterMenuAnchorEl] =\n    useState<null | HTMLElement>(null);\n\n  const hasFavoritesMovies = props.favoritesMovies.length > 0;\n  const hasWatchLaterMovies = props.watchLaterMovies.length > 0;\n\n  const handleFavoritesMenuOpen = (e: HTMLElement) => {\n    setFavoritesMenuAnchorEl(e);\n  };\n  const handleFavoritesMenuClose = () => {\n    setFavoritesMenuAnchorEl(null);\n  };\n\n  const handleWatchLaterMenuOpen = (e: HTMLElement) => {\n    setWatchLaterMenuAnchorEl(e);\n  };\n  const handleWatchLaterMenuClose = () => {\n    setWatchLaterMenuAnchorEl(null);\n  };\n\n  const favoritesMenuId = 'primary-favorites-menu';\n  const renderFavoritesMenu = (\n    <MoviesMenu\n      anchorEl={favoritesMenuAnchorEl}\n      menuId={favoritesMenuId}\n      movies={props.favoritesMovies}\n      onClose={handleFavoritesMenuClose}\n      onRemove={props.removeFromFavorites}\n    />\n  );\n\n  const watchLaterMenuId = 'primary-watch-later-menu';\n  const renderWatchLaterMenu = (\n    <MoviesMenu\n      anchorEl={watchLaterMenuAnchorEl}\n      menuId={watchLaterMenuId}\n      movies={props.watchLaterMovies}\n      onClose={handleWatchLaterMenuClose}\n      onRemove={props.removeFromWatchLater}\n    />\n  );\n\n  return (\n    <Box>\n      <StyledAppBar position=\"fixed\">\n        <Toolbar>\n          <Logo />\n\n          <EmptySeparator />\n\n          <SearchInput\n            value={props.search}\n            onChange={props.onSearchInputChange}\n          />\n\n          <EmptySeparator />\n\n          <Box sx={{display: 'flex'}}>\n            <MenuButton\n              hasBadge={hasFavoritesMovies}\n              label={local.favorites}\n              menuId={favoritesMenuId}\n              onClick={handleFavoritesMenuOpen}\n            >\n              <FavoriteIcon />\n            </MenuButton>\n\n            <MenuButton\n              hasBadge={hasWatchLaterMovies}\n              label={local.watchLater}\n              menuId={watchLaterMenuId}\n              onClick={handleWatchLaterMenuOpen}\n            >\n              <AccessTimeIcon />\n            </MenuButton>\n          </Box>\n        </Toolbar>\n      </StyledAppBar>\n\n      {hasFavoritesMovies && renderFavoritesMenu}\n      {hasWatchLaterMovies && renderWatchLaterMenu}\n    </Box>\n  );\n}\n\nfunction EmptySeparator() {\n  return <Box sx={{flexGrow: 1}} />;\n}\n","import {styled} from '@mui/material/styles';\nimport {Box} from '@mui/system';\nimport {Colors} from '../theme/Colors';\n\nexport const View = styled(Box)(({theme}) => ({\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  backgroundColor: Colors.black,\n  padding: theme.spacing(8, 0),\n}));\n","import {Typography} from '@mui/material';\nimport {Colors} from '../theme/Colors';\n\ninterface Props {\n  text: string;\n}\n\nexport function TextView(props: Props) {\n  return (\n    <Typography sx={{color: Colors.white}} variant=\"h6\" component=\"p\">\n      {props.text}\n    </Typography>\n  );\n}\n","import React from 'react';\nimport {View} from './View';\nimport {local} from '../localization/local';\nimport {TextView} from './TextView';\n\nexport function MoviesEmptyView() {\n  return (\n    <View>\n      <TextView text={local.noMoviesFound} />\n    </View>\n  );\n}\n","import {ImageListItem, List} from '@mui/material';\nimport {styled} from '@mui/material/styles';\nimport {Colors} from '../theme/Colors';\n\nexport const StyledList = styled(List)(({theme}) => ({\n  paddingLeft: theme.spacing(1),\n  paddingRight: theme.spacing(1),\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  width: '100%',\n  height: '100%',\n  backgroundColor: Colors.black,\n  alignItems: 'center',\n  justifyContent: 'center',\n}));\n\nexport const StyledImageListItem = styled(ImageListItem)(({theme}) => ({\n  margin: theme.spacing(2, 2),\n}));\n","import React from 'react';\nimport {IconButton, ImageListItemBar} from '@mui/material';\nimport {\n  AccessTime as AccessTimeIcon,\n  FavoriteBorder as FavoriteIcon,\n} from '@mui/icons-material';\nimport {MoviePresentable} from '../screens/home/MoviePresentable';\nimport {StyledImageListItem, StyledList} from './StyledList';\n\ninterface Props {\n  movies: MoviePresentable[];\n\n  addToFavorites: (m: MoviePresentable) => void;\n  addToWatchLater: (m: MoviePresentable) => void;\n}\n\nexport function MoviesList(props: Props) {\n  return (\n    <StyledList>\n      {props.movies.map((m, idx) => (\n        <StyledImageListItem key={'MoviesListItem_' + idx}>\n          <img\n            width=\"700\"\n            src={`${m.poster}?w=300&fit=crop&auto=format`}\n            srcSet={`${m.poster}?w=300&fit=crop&auto=format&dpr=2 2x`}\n            alt={m.title}\n            loading=\"lazy\"\n          />\n          <ImageListItemBar\n            sx={{\n              background:\n                'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, ' +\n                'rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n            }}\n            position=\"top\"\n            actionPosition=\"right\"\n            actionIcon={\n              <>\n                <IconButton\n                  disabled={m.isFavorite}\n                  sx={{color: 'white'}}\n                  aria-label={`FavoriteIcon ${m.title}`}\n                  onClick={() => props.addToFavorites(m)}\n                >\n                  <FavoriteIcon color={m.isFavorite ? 'error' : 'inherit'} />\n                </IconButton>\n                <IconButton\n                  disabled={m.isWatchLater}\n                  sx={{color: 'white'}}\n                  aria-label={`AccessTimeIcon ${m.title}`}\n                  onClick={() => props.addToWatchLater(m)}\n                >\n                  <AccessTimeIcon\n                    color={m.isWatchLater ? 'error' : 'inherit'}\n                  />\n                </IconButton>\n              </>\n            }\n          />\n          <ImageListItemBar title={m.title} subtitle={m.overview} />\n        </StyledImageListItem>\n      ))}\n    </StyledList>\n  );\n}\n","import React from 'react';\nimport {Error as ErrorIcon} from '@mui/icons-material';\nimport {local} from '../localization/local';\nimport {View} from './View';\nimport {TextView} from './TextView';\n\nexport function ErrorView() {\n  return (\n    <View>\n      <ErrorIcon />\n      <TextView text={local.somethingWentWrong} />\n    </View>\n  );\n}\n","import React from 'react';\nimport {CircularProgress} from '@mui/material';\nimport {View} from './View';\n\nexport function LoadingView() {\n  return (\n    <View>\n      <CircularProgress />\n    </View>\n  );\n}\n","import React, {ReactNode} from 'react';\nimport {ViewState} from '../store/ViewState';\nimport {ErrorView} from './ErrorView';\nimport {LoadingView} from './LoadingView';\nimport {View} from './View';\n\nexport function RemoteData(props: {\n  viewState: ViewState;\n  renderData: () => ReactNode;\n  renderEmpty: () => ReactNode;\n}) {\n  const content = () => {\n    switch (props.viewState) {\n      case ViewState.Data: {\n        return props.renderData();\n      }\n\n      case ViewState.Empty: {\n        return props.renderEmpty();\n      }\n\n      case ViewState.Error: {\n        return <ErrorView />;\n      }\n\n      case ViewState.Loading: {\n        return <LoadingView />;\n      }\n    }\n  };\n\n  return <View>{content()}</View>;\n}\n","import React from 'react';\nimport {local} from '../localization/local';\nimport {TextView} from './TextView';\nimport {View} from './View';\n\nexport function WelcomeView() {\n  return (\n    <View>\n      <TextView text={local.welcome} />\n    </View>\n  );\n}\n","import {MovieJSON} from '../../services/api/models/MoviesJSON';\n\nexport interface MoviePresentable {\n  id: number;\n  title: string;\n  poster: string;\n  overview: string;\n  isFavorite: boolean;\n  isWatchLater: boolean;\n}\n\nexport function buildMoviesPresentable(\n  moviesJSON: MovieJSON[],\n  favorites: MoviePresentable[],\n  watchLater: MoviePresentable[],\n  imagesBaseUrl: string\n): MoviePresentable[] {\n  return moviesJSON.map((m) => ({\n    id: m.id,\n    title: m.title,\n    poster: buildPosterUrl(imagesBaseUrl, m.poster_path!),\n    overview: m.overview,\n    isFavorite: favorites.some((f) => f.id === m.id),\n    isWatchLater: watchLater.some((w) => w.id === m.id),\n  }));\n}\n\nfunction buildPosterUrl(baseUrl: string, path: string): string {\n  return baseUrl + '/t/p/w500' + path;\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {bindActionCreators, Dispatch} from 'redux';\nimport {returntypeof} from 'typesafe-actions';\nimport {MoviesAppBar} from '../../components/MoviesAppBar/MoviesAppBar';\nimport {MoviesEmptyView} from '../../components/MoviesEmptyView';\nimport {MoviesList} from '../../components/MoviesList';\nimport {RemoteData} from '../../components/RemoteData';\nimport {WelcomeView} from '../../components/WelcomeView';\nimport {getImagesBaseUrl} from '../../services/networking/BaseUrls';\nimport {RootState} from '../../store/rootState';\nimport {HomeViewActions} from './homeActions';\nimport {getViewState} from './homeSelectors';\n\nconst mapStateToProps = (state: RootState) =>\n  getViewState(state.home, getImagesBaseUrl());\n\nconst mapDispatchToProps = (dispatch: Dispatch) =>\n  bindActionCreators(HomeViewActions, dispatch);\n\nconst stateProps = returntypeof(mapStateToProps);\nconst dispatchProps = returntypeof(mapDispatchToProps);\n\ntype Props = typeof dispatchProps & typeof stateProps;\n\nexport function Home(props: Props) {\n  const content = () => {\n    if (props.isWelcomeVisible) {\n      return <WelcomeView />;\n    }\n\n    return (\n      <RemoteData\n        viewState={props.viewState}\n        renderData={() => (\n          <MoviesList\n            movies={props.movies}\n            addToFavorites={props.addToFavoriesMovies}\n            addToWatchLater={props.addToWatchLaterMovies}\n          />\n        )}\n        renderEmpty={() => <MoviesEmptyView />}\n      />\n    );\n  };\n\n  return (\n    <>\n      <MoviesAppBar\n        search={props.search}\n        favoritesMovies={props.favorites}\n        watchLaterMovies={props.watchLater}\n        onSearchInputChange={props.onSearchInputChange}\n        removeFromFavorites={props.removeFromFavoritesMovies}\n        removeFromWatchLater={props.removeFromWatchLaterMovies}\n      />\n\n      {content()}\n    </>\n  );\n}\n\nexport const HomeScreen = connect(mapStateToProps, mapDispatchToProps)(Home);\n","import {ViewState} from '../../store/ViewState';\nimport {HomeState} from './homeReducer';\nimport {buildMoviesPresentable, MoviePresentable} from './MoviePresentable';\n\nexport interface HomeViewState {\n  viewState: ViewState;\n  isWelcomeVisible: boolean;\n\n  search: string;\n  movies: MoviePresentable[];\n  favorites: MoviePresentable[];\n  watchLater: MoviePresentable[];\n}\n\nexport function getViewState(\n  state: HomeState,\n  imagesBaseUrl: string\n): HomeViewState {\n  return {\n    search: state.search,\n    viewState: state.viewState,\n    movies: buildMoviesPresentable(\n      state.movies,\n      state.favoritesMovies,\n      state.watchLaterMovies,\n      imagesBaseUrl\n    ),\n    isWelcomeVisible: state.isWelcomeVisible,\n    favorites: state.favoritesMovies,\n    watchLater: state.watchLaterMovies,\n  };\n}\n","import React from 'react';\nimport {CssBaseline} from '@mui/material';\nimport {Provider} from 'react-redux';\nimport {store} from '../store/configureStore';\nimport {HomeScreen} from './home/HomeScreen';\n\nexport function App() {\n  return (\n    <Provider store={store}>\n      <CssBaseline />\n      <HomeScreen />\n    </Provider>\n  );\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from './screens/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}